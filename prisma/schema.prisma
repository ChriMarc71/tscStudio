generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model doctors {
  Id              Int      @id @default(autoincrement())
  Name            String?  @db.VarChar(50)  /// @encrypted
  NameHash        String?  @db.VarChar(100) /// @encryption:hash(Name)
  Surname         String?  @db.VarChar(50)  /// @encrypted
  SurameHash      String?  @db.VarChar(100) /// @encryption:hash(Surname)
  Email           String?  @unique @db.VarChar(100)  /// @encrypted
  EmailHash       String?  @unique @db.VarChar(100)  /// @encryption:hash(Email)
  Username        String?  @unique @db.VarChar(50)   /// @encrypted
  UsernameHash    String?  @unique @db.VarChar(100)  /// @encryption:hash(Username)
  Password        String?  @db.VarChar(50)  /// @encrypted
  PasswordHash    String?  @db.VarChar(100) /// @encryption:hash(Password)
  Number          String?  @db.VarChar(20)  /// @encrypted
  NumberHash      String?  @db.VarChar(100) /// @encryption:hash(Number)
  TokenAmm        String?  @unique @db.VarChar(255) /// @encrypted
  TokenAmmHash    String?  @unique @db.VarChar(255) /// @encryption:hash(TokenAmm)
  IsEnable        Boolean?
}

model patients {
  Id              Int      @id @default(autoincrement())
  Name            String?  @db.VarChar(50)  /// @encrypted
  NameHash        String?  @db.VarChar(100) /// @encryption:hash(Name)
  Surname         String?  @db.VarChar(50)  /// @encrypted
  SurameHash      String?  @db.VarChar(100) /// @encryption:hash(Surname)
  Email           String?  @unique @db.VarChar(100)  /// @encrypted
  EmailHash       String?  @unique @db.VarChar(100)  /// @encryption:hash(Email)
  Username        String?  @unique @db.VarChar(50)   /// @encrypted
  UsernameHash    String?  @unique @db.VarChar(100)  /// @encryption:hash(Username)
  Password        String?  @db.VarChar(50)  /// @encrypted
  PasswordHash    String?  @db.VarChar(100) /// @encryption:hash(Password)
  Number          String?  @db.VarChar(20)  /// @encrypted
  NumberHash      String?  @db.VarChar(100) /// @encryption:hash(Number)
  Doctor          String?  @db.VarChar(50)  /// @encrypted
  DoctorHash      String?  @db.VarChar(50)  /// @encryption:hash(Doctor)
  EmailConfirmed  Boolean?
  DoctorConfirmed Boolean?
  IsEnable        Boolean?
  Token           String   @unique(map: "Token") @db.VarChar(255) /// @encrypted
}

model secretariats {
  Id              Int      @id @default(autoincrement())
  Name            String?  @db.VarChar(50)  /// @encrypted
  NameHash        String?  @db.VarChar(100) /// @encryption:hash(Name)
  Surname         String?  @db.VarChar(50)  /// @encrypted
  SurameHash      String?  @db.VarChar(100) /// @encryption:hash(Surname)
  Email           String?  @unique @db.VarChar(100)  /// @encrypted
  EmailHash       String?  @unique @db.VarChar(100)  /// @encryption:hash(Email)
  Username        String?  @unique @db.VarChar(50)   /// @encrypted
  UsernameHash    String?  @unique @db.VarChar(100)  /// @encryption:hash(Username)
  Password        String?  @db.VarChar(50)  /// @encrypted
  PasswordHash    String?  @db.VarChar(100) /// @encryption:hash(Password)
  Number          String?  @db.VarChar(20)  /// @encrypted
  NumberHash      String?  @db.VarChar(100) /// @encryption:hash(Number)
  TokenAmm        String?  @unique @db.VarChar(255) /// @encrypted
  TokenAmmHash    String?  @unique @db.VarChar(255) /// @encryption:hash(TokenAmm)
  IsEnable        Boolean?
}

model admin {
  Id              Int      @id @default(autoincrement())
  Name            String?  @db.VarChar(50)  /// @encrypted
  NameHash        String?  @db.VarChar(100) /// @encryption:hash(Name)
  Surname         String?  @db.VarChar(50)  /// @encrypted
  SurameHash      String?  @db.VarChar(100) /// @encryption:hash(Surname)
  Email           String?  @unique @db.VarChar(100)  /// @encrypted
  EmailHash       String?  @unique @db.VarChar(100)  /// @encryption:hash(Email)
  Username        String?  @unique @db.VarChar(50)   /// @encrypted
  UsernameHash    String?  @unique @db.VarChar(100)  /// @encryption:hash(Username)
  Password        String?  @db.VarChar(50)  /// @encrypted
  PasswordHash    String?  @db.VarChar(100) /// @encryption:hash(Password)
  TokenAmm        String?  @unique @db.VarChar(255) /// @encrypted
  TokenAmmHash    String?  @unique @db.VarChar(255) /// @encryption:hash(TokenAmm)
}

model bookings {
  Id                    Int       @id @default(autoincrement())
  StartTime             DateTime? @db.DateTime(0) 
  EndTime               DateTime? @db.DateTime(0)
  PatientUsername       String?   @db.VarChar(50) /// @encrypted
  PatientUsernameHash   String?   @db.VarChar(100) /// @encryption:hash(PatientUsername)
  PatientNumber         String?   @db.VarChar(50) /// @encrypted
  PatientNumberHash     String?   @db.VarChar(100) /// @encryption:hash(PatientNumber)
  DoctorUsername        String?   @db.VarChar(50) /// @encrypted
  DoctorUsernameHash    String?   @db.VarChar(100) /// @encryption:hash(DoctorUsername)
}
